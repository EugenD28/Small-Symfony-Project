{% extends 'base.html.twig' %}

{% block title %}{{ user.name }} projects {% endblock %}

{% block body %}

<style>
    tr, td {
        border: 1px solid black;
    }

    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
    }

    .close-modal {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close-modal:hover,
    .close-modal:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
    }

    .input {
        width: 350px;
        display: flex;
        justify-content: space-between;
        margin-bottom: 20px;
    }

    .create-project {
        display: flex;
        justify-content: flex-end;
        margin-top: 20px;

        @media(min-width: 1400px) {
            width: 1405px;
        }
    }
</style>

<table>
  <thead>
    <tr>
      <th>Id</th>
      <th>User</th>
      <th>Title</th>
      <th>Description</th>
      <th>Milestones</th>
      <th>Actions</th>
    </tr>
  </thead>
  <tbody>
    {% for project in user.projects %}
      <tr>
        <td>{{ project.id }}</td>
        <td>{{ user.name }}</td>
        <td>{{ project.title }}</a></td>
        <td>{{ project.description }}</a></td>
        <td>
            {% for milestone in project.projectMilestones %}
                <div style="display: flex; justify-content: space-between"><a href="/milestones/{{ milestone.id }}">{{ milestone.title }}</a> <button onclick="deleteMilestone({{ milestone.id }})">Del</button></div> <br>
            {% endfor %}
            <hr>
            <button onclick="openModal({{project.id}}, 'create-milestone')">Create milestone</button>
        </td>
        <td>
            <button class="delete-button" onclick="deleteProject({{ project.id }})">Delete</button>
        </td>
      </tr>
    {% endfor %}
  </tbody>
</table>
<div class="create-project">
    <button onclick="openModal(null, 'create-project')">Create project</button>
</div>

<div id="create-milestone" class="modal">
  <div class="modal-content">
    <span class="close-modal" onclick="closeModal('create-milestone')">&times;</span>
    <h2>Create new milestone</h2>
    <div>
        <div class="milestone-input">
            <label for="milestone-title"><b>Title</b></label>
            <input name="milestone-title">
        </div>
        <div class="milestone-input">
            <label for="milestone-description"><b>Description</b></label>
            <input name="milestone-description">
        </div>
        <div class="milestone-input">
            <label for="milestoneDeadline"><b>Milestone deadline</b></label>
            <input name="milestoneDeadline" placeholder="2023-05-19">
        </div>
    </div>
    <button onclick="createMilestone()">
        Create milestone
    </button>
  </div>
</div>

<div id="create-project" class="modal">
  <div class="modal-content">
    <span class="close-modal" onclick="closeModal('create-project')">&times;</span>
    <h2>Create new project</h2>
    <div>
        <div class="input">
            <label for="project-title"><b>Title</b></label>
            <input name="project-title">
        </div>
        <div class="input">
            <label for="project-description"><b>Description</b></label>
            <input name="project-description">
        </div>
    </div>
    <button onclick="createProject()">
        Create project
    </button>
  </div>
</div>

<script>
    const milestoneModal = document.querySelector('#create-milestone');
    const projectModal = document.querySelector('#create-project');
    let projectId;    

    document.addEventListener('DOMContentLoaded', function() {
        window.addEventListener('click', function(event) {
            if (event.target === milestoneModal) {
                milestoneModal.style.display = 'none';
            } else if (event.target === projectModal) {
                projectModal.style.display = 'none';
            }
        });
    });

    function openModal(id, modalName) {
        const modal = document.querySelector('#'+modalName);
        projectId = id;
        modal.style.display = 'block';
    }

    function closeModal(modalName) {
        const modal = document.querySelector('#'+modalName);
        modal.style.display = 'none';
    }

    function deleteProject(id){
        fetch('http://localhost:8000/projects/' + id, {
            method: 'DELETE',
        })
        .then(response => {
            if (response.ok) {
                alert('Project was deleted succesfully');
            } else {
                alert('Project wasn\'t deleted');
            }
        })
        .catch(error => {
            alert(error);
        });
    }

    function deleteMilestone(id){
        fetch('http://localhost:8000/project/milestones/' + id, {
            method: 'DELETE',
        })
        .then(response => {
            if (response.ok) {
                alert('Milestone was deleted succesfully');
            } else {
                alert('Milestone wasn\'t deleted');
            }
        })
        .catch(error => {
            alert(error);
        });
    }

    function createProject(){
        const milestone = {
            user: {{ user.id }},
            title: document.getElementsByName('project-title')[0].value,
            description: document.getElementsByName('project-description')[0].value
        }

        fetch('http://localhost:8000/projects/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(milestone)
        })
        .then(response => {
            if (response.ok) {
                alert('Project was created succesfully');
            } else {
                alert('Project wasn\'t created');
            }
        })
        .catch(error => {
            alert(error);
        });
    }

    function createMilestone(){
        const milestone = {
            project: projectId,
            title: document.getElementsByName('milestone-title')[0].value,
            description: document.getElementsByName('milestone-description')[0].value,
            milestoneDeadline: document.getElementsByName('milestone-milestoneDeadline')[0].value
        }

        fetch('http://localhost:8000/project/milestones/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(milestone)
        })
        .then(response => {
            if (response.ok) {
                alert('Milestone was created succesfully');
            } else {
                alert('Milestone wasn\'t created');
            }
        })
        .catch(error => {
            alert(error);
        });
    }
</script>

{% endblock %}
